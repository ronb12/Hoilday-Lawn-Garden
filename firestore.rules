rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Rate limiting function
    function isNotRateLimited() {
      return request.time > resource.data.lastAccess + duration.seconds(1);
    }

    // Authentication check
    function isAuthenticated() {
      return request.auth != null;
    }

    // Admin check
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // User profile check
    function isUserProfile(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Service request validation
    function isValidServiceRequest() {
      let request = request.resource.data;
      return request.size() <= 20 && // Limit fields
             request.serviceType is string &&
             request.serviceType.size() <= 50 &&
             request.description is string &&
             request.description.size() <= 500 &&
             request.status in ['pending', 'approved', 'rejected', 'completed'];
    }

    // Admin profiles
    match /admins/{adminId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // User profiles
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isUserProfile(userId);
      allow delete: if isAdmin();
    }

    // Service requests
    match /serviceRequests/{requestId} {
      allow read: if isAuthenticated() && 
        (isUserProfile(resource.data.userId) || isAdmin());
      allow create: if isAuthenticated() && 
        isValidServiceRequest() && 
        isNotRateLimited() &&
        request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && 
        (isUserProfile(resource.data.userId) || isAdmin()) &&
        isValidServiceRequest();
      allow delete: if isAdmin();
    }

    // Quotes
    match /quotes/{quoteId} {
      allow read: if isAuthenticated() && (
        isUserProfile(resource.data.customerId) || isAdmin()
      );
      allow create: if isAdmin() && isValidQuote();
      allow update: if isAuthenticated() && (
        isUserProfile(resource.data.customerId) || isAdmin()
      );
      allow delete: if isAdmin();
    }

    // Invoices
    match /invoices/{invoiceId} {
      allow read: if isAuthenticated() && (
        isUserProfile(resource.data.customerId) || isAdmin()
      );
      allow create: if isAdmin() && isValidInvoice();
      allow update: if isAuthenticated() && (
        isUserProfile(resource.data.customerId) || isAdmin()
      );
      allow delete: if isAdmin();
    }

    // Chat messages
    match /chats/{chatId} {
      allow read: if isAuthenticated() && (
        isUserProfile(resource.data.senderId) || 
        isUserProfile(resource.data.receiverId) || 
        isAdmin()
      );
      allow create: if isAuthenticated() && 
        request.resource.data.senderId == request.auth.uid;
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }

    // Settings and configurations
    match /settings/{settingId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 